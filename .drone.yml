---
kind: pipeline
type: docker
name: default

workspace:
  path: /drone/jobrunr/src

trigger:
  branch:
    - master
    - v8
  event:
    - push
    - pull_request

steps:
  - name: prepare
    image: plugins/docker
    commands:
      - echo "Running on ${DRONE_STAGE_MACHINE:-<not set>} - ${DRONE_STAGE_OS:-<not set>}"
      - docker build -f PrepareDockerfile -t jobrunr.io/build-container:1.4.1 .

  - name: build
    image: jobrunr.io/build-container:1.4.1
    commands:
      - rm -rf /tmp/reports/*
      - find /drone/jobrunr/src/.gradle -name "*.lock" -type f -delete
      - |
        bash -lc '
          set -e -o pipefail
          ./gradlew --no-daemon -Djib.console=plain --info clean build test --fail-fast \
            | grep -Ev "^(Found locally available resource with matching checksum|BuildToolsApiClasspathEntrySnapshotTransform|ClasspathEntrySnapshotTransform|Resource missing\.)"
        '

---
kind: pipeline
type: docker
name: sonar

workspace:
  path: /drone/jobrunr/src

trigger:
  event:
    - custom

concurrency:
  limit: 1

steps:
  - name: prepare
    image: plugins/docker
    commands:
      - docker build -f PrepareDockerfile -t jobrunr.io/build-container:1.4.1 .

  - name: build
    image: jobrunr.io/build-container:1.4.1
    commands:
      - rm -rf /tmp/reports/*
      - find /drone/jobrunr/src/.gradle -name "*.lock" -type f -delete
      - |
        bash -lc '
          set -e -o pipefail
          ./gradlew --no-daemon -Djib.console=plain --info clean build jacocoTestReport sonar \
            | grep -Ev "^(Found locally available resource with matching checksum|BuildToolsApiClasspathEntrySnapshotTransform|ClasspathEntrySnapshotTransform|Resource missing\.)"
        '
    environment:
      SONAR_TOKEN:
        from_secret: SONAR_TOKEN
      #- gradle assemble :tests:e2e-ui-gson:test :tests:e2e-ui-jackson:test  --tests org.jobrunr.tests.e2e.**

#  - name: slack
#    image: plugins/slack
#    settings:
#      webhook:
#        from_secret: SLACK_WEBHOOK
#      channel: drone
#    when:
#      status: [ success, failure ]

---
kind: pipeline
type: docker
name: release

workspace:
  path: /drone/jobrunr/src

trigger:
  event:
    - tag

steps:
  - name: build-and-upload-to-maven-central
    image: jobrunr.io/build-container:1.4.1
    commands:
      - rm -f *.hprof
      - rm -rf /tmp/reports/*
      - find /drone/src/.gradle -name "*.lock" -type f -delete
      - |
        bash -lc '
          set -e -o pipefail
          ./gradlew --no-daemon -Djib.console=plain --info clean assemble publishToSonatype \
            | grep -Ev "^(Found locally available resource with matching checksum|BuildToolsApiClasspathEntrySnapshotTransform|ClasspathEntrySnapshotTransform|Resource missing\.)"
        '
    environment:
      SIGNING_KEY:
        from_secret: SIGNING_KEY
      SIGNING_PASSWORD:
        from_secret: SIGNING_PASSWORD
      ORG_GRADLE_PROJECT_sonatypeUsername:
        from_secret: ORG_GRADLE_PROJECT_sonatypeUsername
      ORG_GRADLE_PROJECT_sonatypePassword:
        from_secret: ORG_GRADLE_PROJECT_sonatypePassword
  
  #  - name: upload-to-github
  #    image: plugins/github-release
  #    settings:
  #      api_key:
  #        from_secret: GITHUB_TOKEN
  #      files: core/build/libs/*
  #    when:
  #      event: tag

  - name: update and push readme
    image: jobrunr.io/build-container:1.4.1
    environment:
      GITHUB_PAT:
        from_secret: GITHUB_TOKEN
    commands:
      - rm -f *.hprof
      - sed -i "s@<version>.*</version>@<version>${DRONE_TAG}</version>@g" README.md # replace version in README
      - sed -i "s@'org.jobrunr:jobrunr:.*'@'org.jobrunr:jobrunr:${DRONE_TAG}'@g" README.md # replace version in README
      - git config --global user.email "drone-bot@jobrunr.io"
      - git config --global user.name "drone-bot"
      - git add README.md
      - git commit -m "Update readme to version ${DRONE_TAG} [CI SKIP]"
      - git push https://$(GITHUB_PAT)@github.com/jobrunr/jobrunr.git

#  - name: slack
#    image: plugins/slack
#    settings:
#      webhook:
#        from_secret: SLACK_WEBHOOK
#      channel: drone
#    when:
#      status: [ success, failure ]