---
kind: pipeline
type: docker
name: default

trigger:
  branch:
    - master
    - v6
  event:
    - push
    - pull_request

concurrency:
  limit: 1

steps:
  - name: prepare
    image: plugins/docker
    commands:
      - docker build -f PrepareDockerfile -t jobrunr.io/build-container:1.1 .
    volumes:
      - name: dockersock
        path: /var/run/docker.sock

  - name: restore-node-modules-cache
    image: meltwater/drone-cache
    settings:
      backend: "filesystem"
      restore: true
      cache_key: "node_modules"
      archive_format: "gzip"
      mount:
        - 'core/src/main/resources/org/jobrunr/dashboard/frontend/node_modules'
    volumes:
      - name: node-modules-cache
        path: /tmp/cache

  - name: build-frontend
    image: node:12
    commands:
      - cd core/src/main/resources/org/jobrunr/dashboard/frontend
      - npm install
      - npm run build

  - name: save-node-modules-cache
    image: meltwater/drone-cache
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: "node_modules"
      archive_format: "gzip"
      mount:
        - 'core/src/main/resources/org/jobrunr/dashboard/frontend/node_modules'
    volumes:
      - name: node-modules-cache
        path: /tmp/cache

  - name: build
    image: jobrunr.io/build-container:1.1
    commands:
      - rm -rf /tmp/reports/*
      - rm -rf /root/.gradle/caches/$GRADLE_VERSION/
      - find /root/.gradle/caches/ -name "*.lock" -type f -delete
      - ./gradlew -Djib.console=plain --no-daemon -i clean build
      #- gradle assemble :tests:e2e-ui-gson:test :tests:e2e-ui-jackson:test  --tests org.jobrunr.tests.e2e.**
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: gradle-cache
        path: /root/.gradle/caches
      - name: maven-local
        path: /root/.m2
      - name: reports
        path: /tmp/reports

#  - name: slack
#    image: plugins/slack
#    settings:
#      webhook:
#        from_secret: SLACK_WEBHOOK
#      channel: drone
#    when:
#      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: gradle-cache
    host:
      path: /tmp/jobrunr/cache/gradle
  - name: node-modules-cache
    host:
      path: /tmp/jobrunr/cache/node_modules
  - name: maven-local
    host:
      path: /tmp/jobrunr/cache/m2
  - name: reports
    host:
      path: /tmp/jobrunr/reports


---
kind: pipeline
type: docker
name: release

trigger:
  event:
    - tag

steps:
  - name: restore-node-modules-cache
    image: meltwater/drone-cache
    settings:
      backend: "filesystem"
      restore: true
      cache_key: "node_modules"
      archive_format: "gzip"
      mount:
        - 'core/src/main/resources/org/jobrunr/dashboard/frontend/node_modules'
    volumes:
      - name: node-modules-cache
        path: /tmp/cache

  - name: build-frontend
    image: node:12
    commands:
      - cd core/src/main/resources/org/jobrunr/dashboard/frontend
      - npm install
      - npm run build

  - name: save-node-modules-cache
    image: meltwater/drone-cache
    settings:
      backend: "filesystem"
      rebuild: true
      cache_key: "node_modules"
      archive_format: "gzip"
      mount:
        - 'core/src/main/resources/org/jobrunr/dashboard/frontend/node_modules'
    volumes:
      - name: node-modules-cache
        path: /tmp/cache

  - name: build
    image: jobrunr.io/build-container:1.1
    commands:
      - rm -f *.hprof
      - rm -rf /tmp/reports/*
      - rm -rf /root/.gradle/caches/$GRADLE_VERSION/
      - find /root/.gradle/caches/ -name "*.lock" -type f -delete
      - ./gradlew --no-daemon -i clean assemble
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
      - name: gradle-cache
        path: /root/.gradle/caches
      - name: maven-local
        path: /root/.m2
      - name: reports
        path: /tmp/reports

  - name: upload-to-github
    image: plugins/github-release
    settings:
      api_key:
        from_secret: GITHUB_TOKEN
      files: core/build/libs/*
    when:
      event: tag

  - name: upload-to-maven-central
    image: jobrunr.io/build-container:1.1
    environment:
      SIGNING_KEY:
        from_secret: SIGNING_KEY
      SIGNING_PASSWORD:
        from_secret: SIGNING_PASSWORD
      ORG_GRADLE_PROJECT_sonatypeUsername:
        from_secret: ORG_GRADLE_PROJECT_sonatypeUsername
      ORG_GRADLE_PROJECT_sonatypePassword:
        from_secret: ORG_GRADLE_PROJECT_sonatypePassword
    commands:
      - ./gradlew --no-daemon publishToSonatype
    volumes:
      - name: maven-local
        path: /root/.m2

  - name: update and push readme
    image: jobrunr.io/build-container:1.1
    environment:
      GITHUB_PAT:
        from_secret: GITHUB_TOKEN
    commands:
      - rm -f *.hprof
      - sed -i "s@<version>.*</version>@<version>${DRONE_TAG}</version>@g" README.md # replace version in README
      - sed -i "s@'org.jobrunr:jobrunr:.*'@'org.jobrunr:jobrunr:${DRONE_TAG}'@g" README.md # replace version in README
      - git config --global user.email "drone-bot@jobrunr.io"
      - git config --global user.name "drone-bot"
      - git add README.md
      - git commit -m "Update readme to version ${DRONE_TAG} [CI SKIP]"
      - git push https://$(GITHUB_PAT)@github.com/jobrunr/jobrunr.git

#  - name: slack
#    image: plugins/slack
#    settings:
#      webhook:
#        from_secret: SLACK_WEBHOOK
#      channel: drone
#    when:
#      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: gradle-cache
    host:
      path: /tmp/jobrunr/cache/gradle
  - name: node-modules-cache
    host:
      path: /tmp/jobrunr/cache/node_modules
  - name: maven-local
    host:
      path: /tmp/jobrunr/cache/m2
  - name: reports
    host:
      path: /tmp/jobrunr/reports
